package com.sunhome.framework.pattern.factory;
/**
 * 使用工厂模式参考的标准
 * 封装变化：创建对象逻辑可能会变化，封装起来对调用者透明
 * 代码复用：创建代码的逻辑抽取到工厂里面可以复用
 * 隔离复杂性：封装复杂的创建逻辑，调用者无需知道如何创建的
 * 控制复杂度：将代码抽取出来，让原来的函数保持单一，代码简洁一些
 *
 * 简单工厂模式：如果创建逻辑不复杂，使用此模式即可
 * 工厂模式：如果创建逻辑比较复杂，需要结合其他对象时，抽取出来会让代码结构更加清晰
 * 抽象工厂模式：让一个工厂模式支持更多不同类型的解析对象时，使用这个
 *
 * 工厂模式类：Calendar DateFormat BeanFactory FactoryBean
 *
 */
